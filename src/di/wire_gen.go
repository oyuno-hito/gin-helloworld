// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/oyuno-hito/gin-helloworld/src/presentation/controller"
	"github.com/oyuno-hito/gin-helloworld/src/repository"
	"github.com/oyuno-hito/gin-helloworld/src/server"
	"github.com/oyuno-hito/gin-helloworld/src/usecase"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeServer(db *gorm.DB) *ServerSet {
	userRepository := repository.NewUserRepository(db)
	userInfoUseCase := usecase.NewUserInfoUseCase(userRepository)
	userController := controller.NewUserController(userInfoUseCase)
	login := usecase.NewLogin(userRepository)
	loginController := controller.NewLoginController(login)
	logoutController := controller.NewLogoutController()
	serverServer := server.NewServer(userController, loginController, logoutController)
	diServerSet := &ServerSet{
		Server: serverServer,
	}
	return diServerSet
}

// wire.go:

var repositorySet = wire.NewSet(repository.NewUserRepository)

var usecaseSet = wire.NewSet(usecase.NewUserInfoUseCase, usecase.NewLogin)

var controllerSet = wire.NewSet(controller.NewLoginController, controller.NewLogoutController, controller.NewUserController)

var serverSet = wire.NewSet(server.NewServer)

type ServerSet struct {
	Server server.Server
}
